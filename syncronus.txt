module up_down_counter (
    input clk,
    input reset,
    input up_down,
    output reg [3:0] count
);
    always @(posedge clk or posedge reset) begin
        if (reset)
            count <= 4'b0000;
        else if (up_down)
            count <= count + 1;
        else
            count <= count - 1;
    end
endmodule


TESTBENCH

`timescale 1ns / 1ps

module tb_up_down_counter;
    reg clk;
    reg reset;
    reg up_down;
    wire [3:0] count;

    up_down_counter uut (
        .clk(clk),
        .reset(reset),
        .up_down(up_down),
        .count(count)
    );

    initial begin
        clk = 0;
        forever #5 clk = ~clk;
    end

    initial begin
        $display("Time\treset\tup_down\tcount");
        reset = 1; up_down = 0; #10;
        reset = 0; up_down = 1; #50;
        up_down = 0; #50;
        $finish;
    end
endmodule
